include:
  project: TankerHQ/gitlab-ci-files
  ref: 2021-10-07-194
  file: /python.yml

###############
# check stage #
###############

lint:
  extends:
    - .check
    - .tags/linux
    - .rules/mr/auto
  script:
    - ./lint.sh

## deployed native

check/deployed-native/linux/3.7:
  extends: .check/deployed-native/linux
  variables:
     PYENV_VERSION: 3.7.10

check/deployed-native/linux/3.8:
  extends: .check/deployed-native/linux
  variables:
     PYENV_VERSION: 3.8.10

check/deployed-native/linux/3.9:
  extends: .check/deployed-native/linux
  variables:
     PYENV_VERSION: 3.9.5

check/deployed-native/macos/x86_64/3.7:
  extends: .check/deployed-native/macos/x86_64
  variables:
     PYENV_VERSION: 3.7.9

check/deployed-native/macos/x86_64/3.8:
  extends: .check/deployed-native/macos/x86_64
  variables:
     PYENV_VERSION: 3.8.6

check/deployed-native/macos/x86_64/3.9:
  extends: .check/deployed-native/macos/x86_64
  variables:
     PYENV_VERSION: 3.9.0

check/deployed-native/macos/arm/3.9:
  extends: .check/deployed-native/macos/arm
  variables:
     PYENV_VERSION: 3.9.5

check/deployed-native/windows:
  extends:
    - .check
    - .tags/windows
    - .coverage
    - .rules/deployed-native
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --tanker-ref $SDK_NATIVE_LATEST_CONAN_REFERENCE --profile vs2019-release


## native from sources

check/native-from-sources/linux/3.7:
  extends: .check/native-from-sources/linux
  variables:
     PYENV_VERSION: 3.7.10

check/native-from-sources/linux/3.8:
  extends: .check/native-from-sources/linux
  variables:
     PYENV_VERSION: 3.8.10

check/native-from-sources/linux/3.9:
  extends: .check/native-from-sources/linux
  variables:
     PYENV_VERSION: 3.9.5

check/native-from-sources/macos/x86_64/3.7:
  extends: .check/native-from-sources/macos/x86_64
  variables:
     PYENV_VERSION: 3.7.9

check/native-from-sources/macos/x86_64/3.8:
  extends: .check/native-from-sources/macos/x86_64
  variables:
     PYENV_VERSION: 3.8.6

check/native-from-sources/macos/x86_64/3.9:
  extends: .check/native-from-sources/macos/x86_64
  variables:
     PYENV_VERSION: 3.9.0

check/native-from-sources/macos/arm/3.9:
  extends: .check/native-from-sources/macos/arm
  variables:
     PYENV_VERSION: 3.9.5

check/native-from-sources/windows:
  extends:
    - .check
    - .tags/windows
    - .coverage
    - .rules/native-from-sources
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile vs2019-release

## downstream

check/downstream/linux/3.7:
  extends: .check/downstream/linux
  variables:
     PYENV_VERSION: 3.7.10

check/downstream/linux/3.8:
  extends: .check/downstream/linux
  variables:
     PYENV_VERSION: 3.8.10

check/downstream/linux/3.9:
  extends: .check/downstream/linux
  variables:
     PYENV_VERSION: 3.9.5

check/downstream/macos/x86_64/3.7:
  extends: .check/downstream/macos/x86_64
  variables:
     PYENV_VERSION: 3.7.9

check/downstream/macos/x86_64/3.8:
  extends: .check/downstream/macos/x86_64
  variables:
     PYENV_VERSION: 3.8.6

check/downstream/macos/x86_64/3.9:
  extends: .check/downstream/macos/x86_64
  variables:
     PYENV_VERSION: 3.9.0

check/downstream/macos/arm/3.9:
  extends: .check/downstream/macos/arm
  variables:
     PYENV_VERSION: 3.9.5

check/downstream/windows:
  extends:
    - .check
    - .tags/windows
    - .before-script/download-artifacts
    - .rules/check/downstream/windows
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=upstream --profile vs2019-release

safety:
  stage: check
  extends:
    - .check
    - .tags/linux
    - .rules/nightly
  script:
    # ignore coverage package beta release recommendation
    - poetry run safety check -i 41002 --full-report

#####################
# build-wheel stage #
#####################

.rules/build-wheel:
  rules:
    - !reference [.rules/valid-python-release-version, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/deploy-pipeline, rules]

.job/build-wheel:
  extends:
    - .build-wheel
    - .rules/build-wheel
  script:
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py --isolate-conan-user-home build-wheel --profile $CONAN_PROFILE --version $SDK_PYTHON_RELEASE_VERSION --tanker-ref $SDK_NATIVE_LATEST_CONAN_REFERENCE
  artifacts:
    paths:
      - dist

.build-wheel/linux:
  extends:
    - .job/build-wheel
    - .tags/linux
  variables:
    CONAN_PROFILE: linux-release

.build-wheel/macos/x86_64:
  extends:
    - .job/build-wheel
    - .tags/macos/x86_64
  variables:
    CONAN_PROFILE: macos-x86_64-release

.build-wheel/macos/arm:
  extends:
    - .job/build-wheel
    - .tags/macos/arm
  variables:
    CONAN_PROFILE: macos-armv8-release

build-wheel/windows:
  extends:
    - .job/build-wheel
    - .tags/windows
  variables:
    CONAN_PROFILE: vs2019-release

build-wheel/linux/3.7:
  extends: .build-wheel/linux
  variables:
     PYENV_VERSION: 3.7.10

build-wheel/linux/3.8:
  extends: .build-wheel/linux
  variables:
     PYENV_VERSION: 3.8.10

build-wheel/linux/3.9:
  extends: .build-wheel/linux
  variables:
     PYENV_VERSION: 3.9.5

build-wheel/macos/x86_64/3.7:
  extends: .build-wheel/macos/x86_64
  variables:
     PYENV_VERSION: 3.7.9

build-wheel/macos/x86_64/3.8:
  extends: .build-wheel/macos/x86_64
  variables:
     PYENV_VERSION: 3.8.6

build-wheel/macos/x86_64/3.9:
  extends: .build-wheel/macos/x86_64
  variables:
     PYENV_VERSION: 3.9.0

build-wheel/macos/arm/3.9:
  extends: .build-wheel/macos/arm
  variables:
     PYENV_VERSION: 3.9.5

################
# deploy stage #
################

deploy:
  extends:
    - .deploy
    - .tags/linux
    - .rules/deploy/python
  script:
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py deploy
  release:
    description: sdk-python v$SDK_PYTHON_RELEASE_VERSION
    tag_name: v$SDK_PYTHON_RELEASE_VERSION

pages:
  extends:
    - .deploy
    - .tags/linux
    - .rules/push-master-or-feat
  needs:
    - check/native-from-sources/linux/3.7
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days
